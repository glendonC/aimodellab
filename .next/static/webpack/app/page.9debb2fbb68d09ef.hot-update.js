"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/model/analyzer.ts":
/*!*******************************!*\
  !*** ./lib/model/analyzer.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModelAnalyzer: function() { return /* binding */ ModelAnalyzer; }\n/* harmony export */ });\n/* harmony import */ var _lib_huggingface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/huggingface */ \"(app-pages-browser)/./lib/huggingface.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./lib/model/constants.ts\");\n/* __next_internal_client_entry_do_not_use__ ModelAnalyzer auto */ \n\nclass ModelAnalyzer {\n    async analyzeModel(modelId, onProgress) {\n        try {\n            // Loading stage\n            onProgress({\n                stage: \"loading\",\n                progress: 0,\n                message: \"Loading model information...\"\n            });\n            // Skip API call and use local architecture directly\n            const architecture = await (0,_lib_huggingface__WEBPACK_IMPORTED_MODULE_0__.getModelArchitecture)(modelId);\n            // Analysis stage\n            onProgress({\n                stage: \"analyzing\",\n                progress: 75,\n                message: \"Generating visualization...\"\n            });\n            const graph = {\n                nodes: architecture.nodes.map((node)=>({\n                        id: node.id,\n                        type: node.type,\n                        name: node.name,\n                        opType: modelId,\n                        params: node.params,\n                        flops: node.flops,\n                        memoryUsage: node.memoryUsage,\n                        inputShapes: [\n                            [\n                                1,\n                                3,\n                                224,\n                                224\n                            ]\n                        ],\n                        outputShapes: [\n                            [\n                                1,\n                                1000\n                            ]\n                        ],\n                        attributes: {}\n                    })),\n                edges: architecture.edges.map((edge)=>({\n                        id: \"\".concat(edge.source, \"-\").concat(edge.target),\n                        from: edge.source,\n                        to: edge.target,\n                        tensorShape: [\n                            1,\n                            1000\n                        ]\n                    })),\n                metadata: {\n                    framework: \"pytorch\",\n                    version: \"2.0\",\n                    totalParams: architecture.nodes.reduce((sum, node)=>sum + node.params, 0),\n                    totalFlops: architecture.nodes.reduce((sum, node)=>sum + node.flops, 0),\n                    totalMemory: architecture.nodes.reduce((sum, node)=>sum + node.memoryUsage, 0),\n                    modelId: modelId\n                }\n            };\n            // Complete\n            onProgress({\n                stage: \"complete\",\n                progress: 100,\n                message: \"Analysis complete\"\n            });\n            return {\n                graph,\n                performance: this.analyzePerformance(graph)\n            };\n        } catch (error) {\n            console.error(\"Model analysis failed:\", error);\n            throw error;\n        }\n    }\n    analyzePerformance(graph) {\n        var _graph_metadata_modelId;\n        const modelId = ((_graph_metadata_modelId = graph.metadata.modelId) === null || _graph_metadata_modelId === void 0 ? void 0 : _graph_metadata_modelId.toLowerCase()) || \"\";\n        let benchmarkKey = \"resnet-50\"; // default\n        // Map model ID to benchmark key\n        if (modelId.includes(\"yolo\")) benchmarkKey = \"yolov8\";\n        if (modelId.includes(\"stable\")) benchmarkKey = \"stable-diffusion\";\n        if (modelId.includes(\"llama\")) benchmarkKey = \"llama2\";\n        // Add other mappings...\n        const benchmarks = _constants__WEBPACK_IMPORTED_MODULE_1__.MODEL_BENCHMARKS[benchmarkKey];\n        return {\n            inferenceTime: benchmarks.cpu.latency,\n            memoryPeak: benchmarks.cpu.memoryUsage * 1024 * 1024 * 1024,\n            deviceUtilization: benchmarks.cpu.utilization / 100,\n            gpuMetrics: benchmarks.gpu // Add GPU metrics\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tb2RlbC9hbmFseXplci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7bUVBRXlEO0FBRVY7QUFFeEMsTUFBTUU7SUFDWCxNQUFNQyxhQUNKQyxPQUFlLEVBQ2ZDLFVBQWdELEVBQ3ZCO1FBQ3pCLElBQUk7WUFDRixnQkFBZ0I7WUFDaEJBLFdBQVc7Z0JBQ1RDLE9BQU87Z0JBQ1BDLFVBQVU7Z0JBQ1ZDLFNBQVM7WUFDWDtZQUVBLG9EQUFvRDtZQUNwRCxNQUFNQyxlQUFlLE1BQU1ULHNFQUFvQkEsQ0FBQ0k7WUFFaEQsaUJBQWlCO1lBQ2pCQyxXQUFXO2dCQUNUQyxPQUFPO2dCQUNQQyxVQUFVO2dCQUNWQyxTQUFTO1lBQ1g7WUFFQSxNQUFNRSxRQUFvQjtnQkFDeEJDLE9BQU9GLGFBQWFFLEtBQUssQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQSxPQUFTO3dCQUNyQ0MsSUFBSUQsS0FBS0MsRUFBRTt3QkFDWEMsTUFBTUYsS0FBS0UsSUFBSTt3QkFDZkMsTUFBTUgsS0FBS0csSUFBSTt3QkFDZkMsUUFBUWI7d0JBQ1JjLFFBQVFMLEtBQUtLLE1BQU07d0JBQ25CQyxPQUFPTixLQUFLTSxLQUFLO3dCQUNqQkMsYUFBYVAsS0FBS08sV0FBVzt3QkFDN0JDLGFBQWE7NEJBQUM7Z0NBQUM7Z0NBQUc7Z0NBQUc7Z0NBQUs7NkJBQUk7eUJBQUM7d0JBQy9CQyxjQUFjOzRCQUFDO2dDQUFDO2dDQUFHOzZCQUFLO3lCQUFDO3dCQUN6QkMsWUFBWSxDQUFDO29CQUNmO2dCQUNBQyxPQUFPZixhQUFhZSxLQUFLLENBQUNaLEdBQUcsQ0FBQ2EsQ0FBQUEsT0FBUzt3QkFDckNYLElBQUksR0FBa0JXLE9BQWZBLEtBQUtDLE1BQU0sRUFBQyxLQUFlLE9BQVpELEtBQUtFLE1BQU07d0JBQ2pDQyxNQUFNSCxLQUFLQyxNQUFNO3dCQUNqQkcsSUFBSUosS0FBS0UsTUFBTTt3QkFDZkcsYUFBYTs0QkFBQzs0QkFBRzt5QkFBSztvQkFDeEI7Z0JBQ0FDLFVBQVU7b0JBQ1JDLFdBQVc7b0JBQ1hDLFNBQVM7b0JBQ1RDLGFBQWF6QixhQUFhRSxLQUFLLENBQUN3QixNQUFNLENBQUMsQ0FBQ0MsS0FBS3ZCLE9BQVN1QixNQUFNdkIsS0FBS0ssTUFBTSxFQUFFO29CQUN6RW1CLFlBQVk1QixhQUFhRSxLQUFLLENBQUN3QixNQUFNLENBQUMsQ0FBQ0MsS0FBS3ZCLE9BQVN1QixNQUFNdkIsS0FBS00sS0FBSyxFQUFFO29CQUN2RW1CLGFBQWE3QixhQUFhRSxLQUFLLENBQUN3QixNQUFNLENBQUMsQ0FBQ0MsS0FBS3ZCLE9BQVN1QixNQUFNdkIsS0FBS08sV0FBVyxFQUFFO29CQUM5RWhCLFNBQVNBO2dCQUNYO1lBQ0Y7WUFFQSxXQUFXO1lBQ1hDLFdBQVc7Z0JBQ1RDLE9BQU87Z0JBQ1BDLFVBQVU7Z0JBQ1ZDLFNBQVM7WUFDWDtZQUVBLE9BQU87Z0JBQ0xFO2dCQUNBNkIsYUFBYSxJQUFJLENBQUNDLGtCQUFrQixDQUFDOUI7WUFDdkM7UUFFRixFQUFFLE9BQU8rQixPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO1lBQ3hDLE1BQU1BO1FBQ1I7SUFDRjtJQUVRRCxtQkFBbUI5QixLQUFpQixFQUFFO1lBQzVCQTtRQUFoQixNQUFNTixVQUFVTSxFQUFBQSwwQkFBQUEsTUFBTXFCLFFBQVEsQ0FBQzNCLE9BQU8sY0FBdEJNLDhDQUFBQSx3QkFBd0JpQyxXQUFXLE9BQU07UUFDekQsSUFBSUMsZUFBZSxhQUFhLFVBQVU7UUFFMUMsZ0NBQWdDO1FBQ2hDLElBQUl4QyxRQUFReUMsUUFBUSxDQUFDLFNBQVNELGVBQWU7UUFDN0MsSUFBSXhDLFFBQVF5QyxRQUFRLENBQUMsV0FBV0QsZUFBZTtRQUMvQyxJQUFJeEMsUUFBUXlDLFFBQVEsQ0FBQyxVQUFVRCxlQUFlO1FBQzlDLHdCQUF3QjtRQUV4QixNQUFNRSxhQUFhN0Msd0RBQWdCLENBQUMyQyxhQUFhO1FBRWpELE9BQU87WUFDTEcsZUFBZUQsV0FBV0UsR0FBRyxDQUFDQyxPQUFPO1lBQ3JDQyxZQUFZSixXQUFXRSxHQUFHLENBQUM1QixXQUFXLEdBQUcsT0FBTyxPQUFPO1lBQ3ZEK0IsbUJBQW1CTCxXQUFXRSxHQUFHLENBQUNJLFdBQVcsR0FBRztZQUNoREMsWUFBWVAsV0FBV1EsR0FBRyxDQUFDLGtCQUFrQjtRQUMvQztJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL21vZGVsL2FuYWx5emVyLnRzP2I3NTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGdldE1vZGVsQXJjaGl0ZWN0dXJlIH0gZnJvbSAnQC9saWIvaHVnZ2luZ2ZhY2UnO1xuaW1wb3J0IHsgTW9kZWxHcmFwaCwgQW5hbHlzaXNQcm9ncmVzcywgQW5hbHlzaXNSZXN1bHQgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IE1PREVMX0JFTkNITUFSS1MgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBjbGFzcyBNb2RlbEFuYWx5emVyIHtcbiAgYXN5bmMgYW5hbHl6ZU1vZGVsKFxuICAgIG1vZGVsSWQ6IHN0cmluZyxcbiAgICBvblByb2dyZXNzOiAocHJvZ3Jlc3M6IEFuYWx5c2lzUHJvZ3Jlc3MpID0+IHZvaWRcbiAgKTogUHJvbWlzZTxBbmFseXNpc1Jlc3VsdD4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBMb2FkaW5nIHN0YWdlXG4gICAgICBvblByb2dyZXNzKHtcbiAgICAgICAgc3RhZ2U6ICdsb2FkaW5nJyxcbiAgICAgICAgcHJvZ3Jlc3M6IDAsXG4gICAgICAgIG1lc3NhZ2U6ICdMb2FkaW5nIG1vZGVsIGluZm9ybWF0aW9uLi4uJ1xuICAgICAgfSk7XG5cbiAgICAgIC8vIFNraXAgQVBJIGNhbGwgYW5kIHVzZSBsb2NhbCBhcmNoaXRlY3R1cmUgZGlyZWN0bHlcbiAgICAgIGNvbnN0IGFyY2hpdGVjdHVyZSA9IGF3YWl0IGdldE1vZGVsQXJjaGl0ZWN0dXJlKG1vZGVsSWQpO1xuXG4gICAgICAvLyBBbmFseXNpcyBzdGFnZVxuICAgICAgb25Qcm9ncmVzcyh7XG4gICAgICAgIHN0YWdlOiAnYW5hbHl6aW5nJyxcbiAgICAgICAgcHJvZ3Jlc3M6IDc1LFxuICAgICAgICBtZXNzYWdlOiAnR2VuZXJhdGluZyB2aXN1YWxpemF0aW9uLi4uJ1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGdyYXBoOiBNb2RlbEdyYXBoID0ge1xuICAgICAgICBub2RlczogYXJjaGl0ZWN0dXJlLm5vZGVzLm1hcChub2RlID0+ICh7XG4gICAgICAgICAgaWQ6IG5vZGUuaWQsXG4gICAgICAgICAgdHlwZTogbm9kZS50eXBlIGFzIGFueSxcbiAgICAgICAgICBuYW1lOiBub2RlLm5hbWUsXG4gICAgICAgICAgb3BUeXBlOiBtb2RlbElkLFxuICAgICAgICAgIHBhcmFtczogbm9kZS5wYXJhbXMsXG4gICAgICAgICAgZmxvcHM6IG5vZGUuZmxvcHMsXG4gICAgICAgICAgbWVtb3J5VXNhZ2U6IG5vZGUubWVtb3J5VXNhZ2UsXG4gICAgICAgICAgaW5wdXRTaGFwZXM6IFtbMSwgMywgMjI0LCAyMjRdXSxcbiAgICAgICAgICBvdXRwdXRTaGFwZXM6IFtbMSwgMTAwMF1dLFxuICAgICAgICAgIGF0dHJpYnV0ZXM6IHt9XG4gICAgICAgIH0pKSxcbiAgICAgICAgZWRnZXM6IGFyY2hpdGVjdHVyZS5lZGdlcy5tYXAoZWRnZSA9PiAoe1xuICAgICAgICAgIGlkOiBgJHtlZGdlLnNvdXJjZX0tJHtlZGdlLnRhcmdldH1gLFxuICAgICAgICAgIGZyb206IGVkZ2Uuc291cmNlLFxuICAgICAgICAgIHRvOiBlZGdlLnRhcmdldCxcbiAgICAgICAgICB0ZW5zb3JTaGFwZTogWzEsIDEwMDBdXG4gICAgICAgIH0pKSxcbiAgICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgICBmcmFtZXdvcms6ICdweXRvcmNoJyxcbiAgICAgICAgICB2ZXJzaW9uOiAnMi4wJyxcbiAgICAgICAgICB0b3RhbFBhcmFtczogYXJjaGl0ZWN0dXJlLm5vZGVzLnJlZHVjZSgoc3VtLCBub2RlKSA9PiBzdW0gKyBub2RlLnBhcmFtcywgMCksXG4gICAgICAgICAgdG90YWxGbG9wczogYXJjaGl0ZWN0dXJlLm5vZGVzLnJlZHVjZSgoc3VtLCBub2RlKSA9PiBzdW0gKyBub2RlLmZsb3BzLCAwKSxcbiAgICAgICAgICB0b3RhbE1lbW9yeTogYXJjaGl0ZWN0dXJlLm5vZGVzLnJlZHVjZSgoc3VtLCBub2RlKSA9PiBzdW0gKyBub2RlLm1lbW9yeVVzYWdlLCAwKSxcbiAgICAgICAgICBtb2RlbElkOiBtb2RlbElkXG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIC8vIENvbXBsZXRlXG4gICAgICBvblByb2dyZXNzKHtcbiAgICAgICAgc3RhZ2U6ICdjb21wbGV0ZScsXG4gICAgICAgIHByb2dyZXNzOiAxMDAsXG4gICAgICAgIG1lc3NhZ2U6ICdBbmFseXNpcyBjb21wbGV0ZSdcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBncmFwaCxcbiAgICAgICAgcGVyZm9ybWFuY2U6IHRoaXMuYW5hbHl6ZVBlcmZvcm1hbmNlKGdyYXBoKVxuICAgICAgfTtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdNb2RlbCBhbmFseXNpcyBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhbmFseXplUGVyZm9ybWFuY2UoZ3JhcGg6IE1vZGVsR3JhcGgpIHtcbiAgICBjb25zdCBtb2RlbElkID0gZ3JhcGgubWV0YWRhdGEubW9kZWxJZD8udG9Mb3dlckNhc2UoKSB8fCAnJztcbiAgICBsZXQgYmVuY2htYXJrS2V5ID0gJ3Jlc25ldC01MCc7IC8vIGRlZmF1bHRcbiAgXG4gICAgLy8gTWFwIG1vZGVsIElEIHRvIGJlbmNobWFyayBrZXlcbiAgICBpZiAobW9kZWxJZC5pbmNsdWRlcygneW9sbycpKSBiZW5jaG1hcmtLZXkgPSAneW9sb3Y4JztcbiAgICBpZiAobW9kZWxJZC5pbmNsdWRlcygnc3RhYmxlJykpIGJlbmNobWFya0tleSA9ICdzdGFibGUtZGlmZnVzaW9uJztcbiAgICBpZiAobW9kZWxJZC5pbmNsdWRlcygnbGxhbWEnKSkgYmVuY2htYXJrS2V5ID0gJ2xsYW1hMic7XG4gICAgLy8gQWRkIG90aGVyIG1hcHBpbmdzLi4uXG4gIFxuICAgIGNvbnN0IGJlbmNobWFya3MgPSBNT0RFTF9CRU5DSE1BUktTW2JlbmNobWFya0tleV07XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIGluZmVyZW5jZVRpbWU6IGJlbmNobWFya3MuY3B1LmxhdGVuY3ksXG4gICAgICBtZW1vcnlQZWFrOiBiZW5jaG1hcmtzLmNwdS5tZW1vcnlVc2FnZSAqIDEwMjQgKiAxMDI0ICogMTAyNCxcbiAgICAgIGRldmljZVV0aWxpemF0aW9uOiBiZW5jaG1hcmtzLmNwdS51dGlsaXphdGlvbiAvIDEwMCxcbiAgICAgIGdwdU1ldHJpY3M6IGJlbmNobWFya3MuZ3B1IC8vIEFkZCBHUFUgbWV0cmljc1xuICAgIH07XG4gIH1cbn0iXSwibmFtZXMiOlsiZ2V0TW9kZWxBcmNoaXRlY3R1cmUiLCJNT0RFTF9CRU5DSE1BUktTIiwiTW9kZWxBbmFseXplciIsImFuYWx5emVNb2RlbCIsIm1vZGVsSWQiLCJvblByb2dyZXNzIiwic3RhZ2UiLCJwcm9ncmVzcyIsIm1lc3NhZ2UiLCJhcmNoaXRlY3R1cmUiLCJncmFwaCIsIm5vZGVzIiwibWFwIiwibm9kZSIsImlkIiwidHlwZSIsIm5hbWUiLCJvcFR5cGUiLCJwYXJhbXMiLCJmbG9wcyIsIm1lbW9yeVVzYWdlIiwiaW5wdXRTaGFwZXMiLCJvdXRwdXRTaGFwZXMiLCJhdHRyaWJ1dGVzIiwiZWRnZXMiLCJlZGdlIiwic291cmNlIiwidGFyZ2V0IiwiZnJvbSIsInRvIiwidGVuc29yU2hhcGUiLCJtZXRhZGF0YSIsImZyYW1ld29yayIsInZlcnNpb24iLCJ0b3RhbFBhcmFtcyIsInJlZHVjZSIsInN1bSIsInRvdGFsRmxvcHMiLCJ0b3RhbE1lbW9yeSIsInBlcmZvcm1hbmNlIiwiYW5hbHl6ZVBlcmZvcm1hbmNlIiwiZXJyb3IiLCJjb25zb2xlIiwidG9Mb3dlckNhc2UiLCJiZW5jaG1hcmtLZXkiLCJpbmNsdWRlcyIsImJlbmNobWFya3MiLCJpbmZlcmVuY2VUaW1lIiwiY3B1IiwibGF0ZW5jeSIsIm1lbW9yeVBlYWsiLCJkZXZpY2VVdGlsaXphdGlvbiIsInV0aWxpemF0aW9uIiwiZ3B1TWV0cmljcyIsImdwdSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/model/analyzer.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/model/constants.ts":
/*!********************************!*\
  !*** ./lib/model/constants.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CPU_BENCHMARKS: function() { return /* binding */ CPU_BENCHMARKS; },\n/* harmony export */   MODEL_BENCHMARKS: function() { return /* binding */ MODEL_BENCHMARKS; }\n/* harmony export */ });\n// constants.ts\nconst MODEL_BENCHMARKS = {\n    \"resnet-50\": {\n        cpu: {\n            inferenceSpeed: 30.0,\n            latency: 1.0,\n            memoryUsage: 535.0,\n            utilization: 45.0\n        },\n        gpu: {\n            inferenceSpeed: 120.0,\n            latency: 0.2,\n            memoryUsage: 535.0,\n            utilization: 13.5,\n            tensorCoreUsage: \"65.2%\",\n            memoryBandwidth: \"0.9 TB/s\",\n            speedup: \"6.2x\"\n        }\n    },\n    \"yolov8\": {\n        cpu: {\n            inferenceSpeed: 12.0,\n            latency: 2.8,\n            memoryUsage: 642.0,\n            utilization: 62.0\n        },\n        gpu: {\n            inferenceSpeed: 85.0,\n            latency: 0.4,\n            memoryUsage: 642.0,\n            utilization: 18.5,\n            tensorCoreUsage: \"78.5%\",\n            memoryBandwidth: \"1.2 TB/s\",\n            speedup: \"7.5x\"\n        }\n    },\n    \"stable-diffusion\": {\n        cpu: {\n            inferenceSpeed: 0.2,\n            latency: 15.0,\n            memoryUsage: 785.0,\n            utilization: 95.0\n        },\n        gpu: {\n            inferenceSpeed: 2.5,\n            latency: 1.2,\n            memoryUsage: 785.0,\n            utilization: 35.0,\n            tensorCoreUsage: \"92.5%\",\n            memoryBandwidth: \"1.8 TB/s\",\n            speedup: \"12.5x\"\n        }\n    },\n    \"llama2\": {\n        cpu: {\n            inferenceSpeed: 0.5,\n            latency: 8.0,\n            memoryUsage: 892.0,\n            utilization: 88.0\n        },\n        gpu: {\n            inferenceSpeed: 4.9,\n            latency: 0.82,\n            memoryUsage: 892.0,\n            utilization: 28.0,\n            tensorCoreUsage: \"88.3%\",\n            memoryBandwidth: \"1.6 TB/s\",\n            speedup: \"9.8x\"\n        }\n    }\n};\nconst CPU_BENCHMARKS = {\n    \"xeon-8380\": {\n        resnet50: {\n            batchSize1: {\n                fps: 52,\n                latency: 19.2,\n                memory: 147\n            }\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tb2RlbC9jb25zdGFudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxlQUFlO0FBQ1IsTUFBTUEsbUJBQW1CO0lBQzlCLGFBQWE7UUFDWEMsS0FBSztZQUNIQyxnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1FBQ2Y7UUFDQUMsS0FBSztZQUNISixnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1lBQ2JFLGlCQUFpQjtZQUNqQkMsaUJBQWlCO1lBQ2pCQyxTQUFTO1FBQ1g7SUFDRjtJQUNBLFVBQVU7UUFDUlIsS0FBSztZQUNIQyxnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1FBQ2Y7UUFDQUMsS0FBSztZQUNISixnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1lBQ2JFLGlCQUFpQjtZQUNqQkMsaUJBQWlCO1lBQ2pCQyxTQUFTO1FBQ1g7SUFDRjtJQUNBLG9CQUFvQjtRQUNsQlIsS0FBSztZQUNIQyxnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1FBQ2Y7UUFDQUMsS0FBSztZQUNISixnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1lBQ2JFLGlCQUFpQjtZQUNqQkMsaUJBQWlCO1lBQ2pCQyxTQUFTO1FBQ1g7SUFDRjtJQUNBLFVBQVU7UUFDUlIsS0FBSztZQUNIQyxnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1FBQ2Y7UUFDQUMsS0FBSztZQUNISixnQkFBZ0I7WUFDaEJDLFNBQVM7WUFDVEMsYUFBYTtZQUNiQyxhQUFhO1lBQ2JFLGlCQUFpQjtZQUNqQkMsaUJBQWlCO1lBQ2pCQyxTQUFTO1FBQ1g7SUFDRjtBQUVGLEVBQUU7QUFFSyxNQUFNQyxpQkFBaUI7SUFDNUIsYUFBYTtRQUNYQyxVQUFVO1lBQ1JDLFlBQVk7Z0JBQ1ZDLEtBQUs7Z0JBQ0xWLFNBQVM7Z0JBQ1RXLFFBQVE7WUFDVjtRQUNGO0lBRUY7QUFDRixFQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9tb2RlbC9jb25zdGFudHMudHM/YzdmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdGFudHMudHNcbmV4cG9ydCBjb25zdCBNT0RFTF9CRU5DSE1BUktTID0ge1xuICAncmVzbmV0LTUwJzoge1xuICAgIGNwdToge1xuICAgICAgaW5mZXJlbmNlU3BlZWQ6IDMwLjAsICAvLyBGUFNcbiAgICAgIGxhdGVuY3k6IDEuMCwgICAgICAgICAvLyBtc1xuICAgICAgbWVtb3J5VXNhZ2U6IDUzNS4wLCAgIC8vIEdCXG4gICAgICB1dGlsaXphdGlvbjogNDUuMCwgICAgLy8gJVxuICAgIH0sXG4gICAgZ3B1OiB7XG4gICAgICBpbmZlcmVuY2VTcGVlZDogMTIwLjAsIC8vIDR4IGZhc3RlclxuICAgICAgbGF0ZW5jeTogMC4yLCAgICAgICAgIC8vIDV4IGxvd2VyXG4gICAgICBtZW1vcnlVc2FnZTogNTM1LjAsICAgLy8gU2FtZSBtZW1vcnlcbiAgICAgIHV0aWxpemF0aW9uOiAxMy41LCAgICAvLyBCZXR0ZXIgZWZmaWNpZW5jeVxuICAgICAgdGVuc29yQ29yZVVzYWdlOiBcIjY1LjIlXCIsXG4gICAgICBtZW1vcnlCYW5kd2lkdGg6IFwiMC45IFRCL3NcIixcbiAgICAgIHNwZWVkdXA6IFwiNi4yeFwiXG4gICAgfVxuICB9LFxuICAneW9sb3Y4Jzoge1xuICAgIGNwdToge1xuICAgICAgaW5mZXJlbmNlU3BlZWQ6IDEyLjAsXG4gICAgICBsYXRlbmN5OiAyLjgsXG4gICAgICBtZW1vcnlVc2FnZTogNjQyLjAsXG4gICAgICB1dGlsaXphdGlvbjogNjIuMCxcbiAgICB9LFxuICAgIGdwdToge1xuICAgICAgaW5mZXJlbmNlU3BlZWQ6IDg1LjAsXG4gICAgICBsYXRlbmN5OiAwLjQsXG4gICAgICBtZW1vcnlVc2FnZTogNjQyLjAsXG4gICAgICB1dGlsaXphdGlvbjogMTguNSxcbiAgICAgIHRlbnNvckNvcmVVc2FnZTogXCI3OC41JVwiLFxuICAgICAgbWVtb3J5QmFuZHdpZHRoOiBcIjEuMiBUQi9zXCIsXG4gICAgICBzcGVlZHVwOiBcIjcuNXhcIlxuICAgIH1cbiAgfSxcbiAgJ3N0YWJsZS1kaWZmdXNpb24nOiB7XG4gICAgY3B1OiB7XG4gICAgICBpbmZlcmVuY2VTcGVlZDogMC4yLFxuICAgICAgbGF0ZW5jeTogMTUuMCxcbiAgICAgIG1lbW9yeVVzYWdlOiA3ODUuMCxcbiAgICAgIHV0aWxpemF0aW9uOiA5NS4wLFxuICAgIH0sXG4gICAgZ3B1OiB7XG4gICAgICBpbmZlcmVuY2VTcGVlZDogMi41LFxuICAgICAgbGF0ZW5jeTogMS4yLFxuICAgICAgbWVtb3J5VXNhZ2U6IDc4NS4wLFxuICAgICAgdXRpbGl6YXRpb246IDM1LjAsXG4gICAgICB0ZW5zb3JDb3JlVXNhZ2U6IFwiOTIuNSVcIixcbiAgICAgIG1lbW9yeUJhbmR3aWR0aDogXCIxLjggVEIvc1wiLCBcbiAgICAgIHNwZWVkdXA6IFwiMTIuNXhcIlxuICAgIH1cbiAgfSxcbiAgJ2xsYW1hMic6IHtcbiAgICBjcHU6IHtcbiAgICAgIGluZmVyZW5jZVNwZWVkOiAwLjUsXG4gICAgICBsYXRlbmN5OiA4LjAsXG4gICAgICBtZW1vcnlVc2FnZTogODkyLjAsXG4gICAgICB1dGlsaXphdGlvbjogODguMCxcbiAgICB9LFxuICAgIGdwdToge1xuICAgICAgaW5mZXJlbmNlU3BlZWQ6IDQuOSxcbiAgICAgIGxhdGVuY3k6IDAuODIsXG4gICAgICBtZW1vcnlVc2FnZTogODkyLjAsXG4gICAgICB1dGlsaXphdGlvbjogMjguMCxcbiAgICAgIHRlbnNvckNvcmVVc2FnZTogXCI4OC4zJVwiLFxuICAgICAgbWVtb3J5QmFuZHdpZHRoOiBcIjEuNiBUQi9zXCIsXG4gICAgICBzcGVlZHVwOiBcIjkuOHhcIlxuICAgIH1cbiAgfSxcbiAgLy8gQWRkIG90aGVyIG1vZGVscy4uLlxufTtcblxuZXhwb3J0IGNvbnN0IENQVV9CRU5DSE1BUktTID0ge1xuICAneGVvbi04MzgwJzoge1xuICAgIHJlc25ldDUwOiB7XG4gICAgICBiYXRjaFNpemUxOiB7XG4gICAgICAgIGZwczogNTIsXG4gICAgICAgIGxhdGVuY3k6IDE5LjIsXG4gICAgICAgIG1lbW9yeTogMTQ3XG4gICAgICB9XG4gICAgfSxcbiAgICAvLyAuLi4gcmVzdCBvZiB0aGUgYmVuY2htYXJrc1xuICB9XG59IGFzIGNvbnN0OyAiXSwibmFtZXMiOlsiTU9ERUxfQkVOQ0hNQVJLUyIsImNwdSIsImluZmVyZW5jZVNwZWVkIiwibGF0ZW5jeSIsIm1lbW9yeVVzYWdlIiwidXRpbGl6YXRpb24iLCJncHUiLCJ0ZW5zb3JDb3JlVXNhZ2UiLCJtZW1vcnlCYW5kd2lkdGgiLCJzcGVlZHVwIiwiQ1BVX0JFTkNITUFSS1MiLCJyZXNuZXQ1MCIsImJhdGNoU2l6ZTEiLCJmcHMiLCJtZW1vcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/model/constants.ts\n"));

/***/ })

});