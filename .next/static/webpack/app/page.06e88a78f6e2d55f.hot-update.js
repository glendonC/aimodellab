"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/model/constants.ts":
/*!********************************!*\
  !*** ./lib/model/constants.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CPU_BENCHMARKS: function() { return /* binding */ CPU_BENCHMARKS; },\n/* harmony export */   NVIDIA_BENCHMARKS: function() { return /* binding */ NVIDIA_BENCHMARKS; }\n/* harmony export */ });\nconst NVIDIA_BENCHMARKS = {\n    resnet50: {\n        a100: {\n            batchSize1: {\n                fps: 615,\n                latency: 1.6,\n                memory: 98,\n                powerDraw: 250 // Watts\n            },\n            batchSize32: {\n                fps: 2480,\n                latency: 12.9,\n                memory: 1205,\n                powerDraw: 315\n            }\n        }\n    }\n};\nconst CPU_BENCHMARKS = {\n    \"xeon-8380\": {\n        resnet50: {\n            batchSize1: {\n                fps: 52,\n                latency: 19.2,\n                memory: 147\n            }\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tb2RlbC9jb25zdGFudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxvQkFBb0I7SUFDL0JDLFVBQVU7UUFDUkMsTUFBTTtZQUNKQyxZQUFZO2dCQUNWQyxLQUFLO2dCQUNMQyxTQUFTO2dCQUNUQyxRQUFRO2dCQUNSQyxXQUFXLElBQU0sUUFBUTtZQUMzQjtZQUNBQyxhQUFhO2dCQUNYSixLQUFLO2dCQUNMQyxTQUFTO2dCQUNUQyxRQUFRO2dCQUNSQyxXQUFXO1lBQ2I7UUFDRjtJQUNGO0FBRUYsRUFBVztBQUVKLE1BQU1FLGlCQUFpQjtJQUM1QixhQUFhO1FBQ1hSLFVBQVU7WUFDUkUsWUFBWTtnQkFDVkMsS0FBSztnQkFDTEMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1FBQ0Y7SUFFRjtBQUNGLEVBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL21vZGVsL2NvbnN0YW50cy50cz9jN2YxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBOVklESUFfQkVOQ0hNQVJLUyA9IHtcbiAgcmVzbmV0NTA6IHtcbiAgICBhMTAwOiB7XG4gICAgICBiYXRjaFNpemUxOiB7XG4gICAgICAgIGZwczogNjE1LFxuICAgICAgICBsYXRlbmN5OiAxLjYsICAgIC8vIG1zXG4gICAgICAgIG1lbW9yeTogOTgsICAgICAgLy8gTUJcbiAgICAgICAgcG93ZXJEcmF3OiAyNTAgICAvLyBXYXR0c1xuICAgICAgfSxcbiAgICAgIGJhdGNoU2l6ZTMyOiB7XG4gICAgICAgIGZwczogMjQ4MCxcbiAgICAgICAgbGF0ZW5jeTogMTIuOSxcbiAgICAgICAgbWVtb3J5OiAxMjA1LFxuICAgICAgICBwb3dlckRyYXc6IDMxNVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgLy8gLi4uIHJlc3Qgb2YgdGhlIGJlbmNobWFya3Ncbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBjb25zdCBDUFVfQkVOQ0hNQVJLUyA9IHtcbiAgJ3hlb24tODM4MCc6IHtcbiAgICByZXNuZXQ1MDoge1xuICAgICAgYmF0Y2hTaXplMToge1xuICAgICAgICBmcHM6IDUyLFxuICAgICAgICBsYXRlbmN5OiAxOS4yLFxuICAgICAgICBtZW1vcnk6IDE0N1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8gLi4uIHJlc3Qgb2YgdGhlIGJlbmNobWFya3NcbiAgfVxufSBhcyBjb25zdDsgIl0sIm5hbWVzIjpbIk5WSURJQV9CRU5DSE1BUktTIiwicmVzbmV0NTAiLCJhMTAwIiwiYmF0Y2hTaXplMSIsImZwcyIsImxhdGVuY3kiLCJtZW1vcnkiLCJwb3dlckRyYXciLCJiYXRjaFNpemUzMiIsIkNQVV9CRU5DSE1BUktTIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/model/constants.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/model/performance.ts":
/*!**********************************!*\
  !*** ./lib/model/performance.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PerformanceCalculator: function() { return /* binding */ PerformanceCalculator; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./lib/model/constants.ts\");\n\nclass PerformanceCalculator {\n    getScalingFactors(modelId, totalParams, totalFlops) {\n        // Get baseline model for comparison\n        const baselineModel = \"resnet50\";\n        const baselineParams = 23e6; // ResNet-50 params\n        const baselineFlops = 8e9; // ResNet-50 FLOPs\n        // Calculate scaling factors\n        const paramScale = Math.sqrt(totalParams / baselineParams);\n        const flopsScale = Math.cbrt(totalFlops / baselineFlops);\n        // Model-specific adjustments\n        const modelType = modelId.toLowerCase();\n        if (modelType.includes(\"stable\")) {\n            return {\n                paramScale: paramScale * 1.5,\n                flopsScale: flopsScale * 2\n            };\n        }\n        if (modelType.includes(\"llama\") || modelType.includes(\"gpt\")) {\n            return {\n                paramScale: paramScale * 1.2,\n                flopsScale: flopsScale * 1.3\n            };\n        }\n        return {\n            paramScale,\n            flopsScale\n        };\n    }\n    calculateMetrics(analysisResult) {\n        const { totalParams, totalFlops, modelId } = analysisResult.graph.metadata;\n        const { paramScale, flopsScale } = this.getScalingFactors(modelId, totalParams, totalFlops);\n        // Get baseline benchmarks\n        const gpuBaseline = _constants__WEBPACK_IMPORTED_MODULE_0__.NVIDIA_BENCHMARKS.resnet50.a100.batchSize1;\n        const cpuBaseline = _constants__WEBPACK_IMPORTED_MODULE_0__.CPU_BENCHMARKS[\"xeon-8380\"].resnet50.batchSize1;\n        // Calculate GPU metrics\n        const gpuMetrics = {\n            fps: gpuBaseline.fps / flopsScale,\n            latency: gpuBaseline.latency * flopsScale,\n            memory: gpuBaseline.memory * paramScale / 1024,\n            utilization: Math.min(95, totalFlops / 1e12 * 30)\n        };\n        // Calculate CPU metrics\n        const cpuMetrics = {\n            fps: cpuBaseline.fps / flopsScale,\n            latency: cpuBaseline.latency * flopsScale,\n            memory: cpuBaseline.memory * paramScale / 1024,\n            utilization: Math.min(100, totalFlops / 1e12 * 45)\n        };\n        return {\n            cpuMetrics,\n            gpuMetrics,\n            nvOptimizations: {\n                tensorCoreUsage: \"\".concat(Math.min(95, totalFlops / 1e12 * 25).toFixed(1), \"%\"),\n                memoryBandwidth: \"\".concat((totalFlops / 1e12).toFixed(1), \" TB/s\"),\n                speedup: \"\".concat((cpuMetrics.latency / gpuMetrics.latency).toFixed(1), \"x\")\n            }\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tb2RlbC9wZXJmb3JtYW5jZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUd6RCxNQUFNRTtJQUNIQyxrQkFBa0JDLE9BQWUsRUFBRUMsV0FBbUIsRUFBRUMsVUFBa0IsRUFBRTtRQUNsRixvQ0FBb0M7UUFDcEMsTUFBTUMsZ0JBQWdCO1FBQ3RCLE1BQU1DLGlCQUFpQixNQUFPLG1CQUFtQjtRQUNqRCxNQUFNQyxnQkFBZ0IsS0FBUSxrQkFBa0I7UUFFaEQsNEJBQTRCO1FBQzVCLE1BQU1DLGFBQWFDLEtBQUtDLElBQUksQ0FBQ1AsY0FBY0c7UUFDM0MsTUFBTUssYUFBYUYsS0FBS0csSUFBSSxDQUFDUixhQUFhRztRQUUxQyw2QkFBNkI7UUFDN0IsTUFBTU0sWUFBWVgsUUFBUVksV0FBVztRQUNyQyxJQUFJRCxVQUFVRSxRQUFRLENBQUMsV0FBVztZQUNoQyxPQUFPO2dCQUFFUCxZQUFZQSxhQUFhO2dCQUFLRyxZQUFZQSxhQUFhO1lBQUU7UUFDcEU7UUFDQSxJQUFJRSxVQUFVRSxRQUFRLENBQUMsWUFBWUYsVUFBVUUsUUFBUSxDQUFDLFFBQVE7WUFDNUQsT0FBTztnQkFBRVAsWUFBWUEsYUFBYTtnQkFBS0csWUFBWUEsYUFBYTtZQUFJO1FBQ3RFO1FBQ0EsT0FBTztZQUFFSDtZQUFZRztRQUFXO0lBQ2xDO0lBRUFLLGlCQUFpQkMsY0FBOEIsRUFBRTtRQUMvQyxNQUFNLEVBQUVkLFdBQVcsRUFBRUMsVUFBVSxFQUFFRixPQUFPLEVBQUUsR0FBR2UsZUFBZUMsS0FBSyxDQUFDQyxRQUFRO1FBQzFFLE1BQU0sRUFBRVgsVUFBVSxFQUFFRyxVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUNWLGlCQUFpQixDQUFDQyxTQUFTQyxhQUFhQztRQUVoRiwwQkFBMEI7UUFDMUIsTUFBTWdCLGNBQWN0Qix5REFBaUJBLENBQUN1QixRQUFRLENBQUNDLElBQUksQ0FBQ0MsVUFBVTtRQUM5RCxNQUFNQyxjQUFjekIsc0RBQWMsQ0FBQyxZQUFZLENBQUNzQixRQUFRLENBQUNFLFVBQVU7UUFFbkUsd0JBQXdCO1FBQ3hCLE1BQU1FLGFBQWE7WUFDakJDLEtBQUtOLFlBQVlNLEdBQUcsR0FBR2Y7WUFDdkJnQixTQUFTUCxZQUFZTyxPQUFPLEdBQUdoQjtZQUMvQmlCLFFBQVEsWUFBYUEsTUFBTSxHQUFHcEIsYUFBYztZQUM1Q3FCLGFBQWFwQixLQUFLcUIsR0FBRyxDQUFDLElBQUksYUFBYyxPQUFRO1FBQ2xEO1FBRUEsd0JBQXdCO1FBQ3hCLE1BQU1DLGFBQWE7WUFDakJMLEtBQUtGLFlBQVlFLEdBQUcsR0FBR2Y7WUFDdkJnQixTQUFTSCxZQUFZRyxPQUFPLEdBQUdoQjtZQUMvQmlCLFFBQVEsWUFBYUEsTUFBTSxHQUFHcEIsYUFBYztZQUM1Q3FCLGFBQWFwQixLQUFLcUIsR0FBRyxDQUFDLEtBQUssYUFBYyxPQUFRO1FBQ25EO1FBRUEsT0FBTztZQUNMQztZQUNBTjtZQUNBTyxpQkFBaUI7Z0JBQ2ZDLGlCQUFpQixHQUFxRCxPQUFsRHhCLEtBQUtxQixHQUFHLENBQUMsSUFBSSxhQUFjLE9BQVEsSUFBSUksT0FBTyxDQUFDLElBQUc7Z0JBQ3RFQyxpQkFBaUIsR0FBa0MsT0FBL0IsQ0FBQy9CLGFBQWEsSUFBRyxFQUFHOEIsT0FBTyxDQUFDLElBQUc7Z0JBQ25ERSxTQUFTLEdBQXdELE9BQXJELENBQUNMLFdBQVdKLE9BQU8sR0FBR0YsV0FBV0UsT0FBTyxFQUFFTyxPQUFPLENBQUMsSUFBRztZQUNuRTtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvbW9kZWwvcGVyZm9ybWFuY2UudHM/ZGI1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOVklESUFfQkVOQ0hNQVJLUywgQ1BVX0JFTkNITUFSS1MgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgdHlwZSB7IEFuYWx5c2lzUmVzdWx0IH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBQZXJmb3JtYW5jZUNhbGN1bGF0b3Ige1xuICBwcml2YXRlIGdldFNjYWxpbmdGYWN0b3JzKG1vZGVsSWQ6IHN0cmluZywgdG90YWxQYXJhbXM6IG51bWJlciwgdG90YWxGbG9wczogbnVtYmVyKSB7XG4gICAgLy8gR2V0IGJhc2VsaW5lIG1vZGVsIGZvciBjb21wYXJpc29uXG4gICAgY29uc3QgYmFzZWxpbmVNb2RlbCA9ICdyZXNuZXQ1MCc7XG4gICAgY29uc3QgYmFzZWxpbmVQYXJhbXMgPSAyM2U2OyAgLy8gUmVzTmV0LTUwIHBhcmFtc1xuICAgIGNvbnN0IGJhc2VsaW5lRmxvcHMgPSA4ZTk7ICAgIC8vIFJlc05ldC01MCBGTE9Qc1xuXG4gICAgLy8gQ2FsY3VsYXRlIHNjYWxpbmcgZmFjdG9yc1xuICAgIGNvbnN0IHBhcmFtU2NhbGUgPSBNYXRoLnNxcnQodG90YWxQYXJhbXMgLyBiYXNlbGluZVBhcmFtcyk7XG4gICAgY29uc3QgZmxvcHNTY2FsZSA9IE1hdGguY2JydCh0b3RhbEZsb3BzIC8gYmFzZWxpbmVGbG9wcyk7XG4gICAgXG4gICAgLy8gTW9kZWwtc3BlY2lmaWMgYWRqdXN0bWVudHNcbiAgICBjb25zdCBtb2RlbFR5cGUgPSBtb2RlbElkLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKG1vZGVsVHlwZS5pbmNsdWRlcygnc3RhYmxlJykpIHtcbiAgICAgIHJldHVybiB7IHBhcmFtU2NhbGU6IHBhcmFtU2NhbGUgKiAxLjUsIGZsb3BzU2NhbGU6IGZsb3BzU2NhbGUgKiAyIH07XG4gICAgfVxuICAgIGlmIChtb2RlbFR5cGUuaW5jbHVkZXMoJ2xsYW1hJykgfHwgbW9kZWxUeXBlLmluY2x1ZGVzKCdncHQnKSkge1xuICAgICAgcmV0dXJuIHsgcGFyYW1TY2FsZTogcGFyYW1TY2FsZSAqIDEuMiwgZmxvcHNTY2FsZTogZmxvcHNTY2FsZSAqIDEuMyB9O1xuICAgIH1cbiAgICByZXR1cm4geyBwYXJhbVNjYWxlLCBmbG9wc1NjYWxlIH07XG4gIH1cblxuICBjYWxjdWxhdGVNZXRyaWNzKGFuYWx5c2lzUmVzdWx0OiBBbmFseXNpc1Jlc3VsdCkge1xuICAgIGNvbnN0IHsgdG90YWxQYXJhbXMsIHRvdGFsRmxvcHMsIG1vZGVsSWQgfSA9IGFuYWx5c2lzUmVzdWx0LmdyYXBoLm1ldGFkYXRhO1xuICAgIGNvbnN0IHsgcGFyYW1TY2FsZSwgZmxvcHNTY2FsZSB9ID0gdGhpcy5nZXRTY2FsaW5nRmFjdG9ycyhtb2RlbElkLCB0b3RhbFBhcmFtcywgdG90YWxGbG9wcyk7XG5cbiAgICAvLyBHZXQgYmFzZWxpbmUgYmVuY2htYXJrc1xuICAgIGNvbnN0IGdwdUJhc2VsaW5lID0gTlZJRElBX0JFTkNITUFSS1MucmVzbmV0NTAuYTEwMC5iYXRjaFNpemUxO1xuICAgIGNvbnN0IGNwdUJhc2VsaW5lID0gQ1BVX0JFTkNITUFSS1NbJ3hlb24tODM4MCddLnJlc25ldDUwLmJhdGNoU2l6ZTE7XG5cbiAgICAvLyBDYWxjdWxhdGUgR1BVIG1ldHJpY3NcbiAgICBjb25zdCBncHVNZXRyaWNzID0ge1xuICAgICAgZnBzOiBncHVCYXNlbGluZS5mcHMgLyBmbG9wc1NjYWxlLFxuICAgICAgbGF0ZW5jeTogZ3B1QmFzZWxpbmUubGF0ZW5jeSAqIGZsb3BzU2NhbGUsXG4gICAgICBtZW1vcnk6IChncHVCYXNlbGluZS5tZW1vcnkgKiBwYXJhbVNjYWxlKSAvIDEwMjQsIC8vIENvbnZlcnQgdG8gR0JcbiAgICAgIHV0aWxpemF0aW9uOiBNYXRoLm1pbig5NSwgKHRvdGFsRmxvcHMgLyAxZTEyKSAqIDMwKVxuICAgIH07XG5cbiAgICAvLyBDYWxjdWxhdGUgQ1BVIG1ldHJpY3NcbiAgICBjb25zdCBjcHVNZXRyaWNzID0ge1xuICAgICAgZnBzOiBjcHVCYXNlbGluZS5mcHMgLyBmbG9wc1NjYWxlLFxuICAgICAgbGF0ZW5jeTogY3B1QmFzZWxpbmUubGF0ZW5jeSAqIGZsb3BzU2NhbGUsXG4gICAgICBtZW1vcnk6IChjcHVCYXNlbGluZS5tZW1vcnkgKiBwYXJhbVNjYWxlKSAvIDEwMjQsXG4gICAgICB1dGlsaXphdGlvbjogTWF0aC5taW4oMTAwLCAodG90YWxGbG9wcyAvIDFlMTIpICogNDUpXG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICBjcHVNZXRyaWNzLFxuICAgICAgZ3B1TWV0cmljcyxcbiAgICAgIG52T3B0aW1pemF0aW9uczoge1xuICAgICAgICB0ZW5zb3JDb3JlVXNhZ2U6IGAke01hdGgubWluKDk1LCAodG90YWxGbG9wcyAvIDFlMTIpICogMjUpLnRvRml4ZWQoMSl9JWAsXG4gICAgICAgIG1lbW9yeUJhbmR3aWR0aDogYCR7KHRvdGFsRmxvcHMgLyAxZTEyKS50b0ZpeGVkKDEpfSBUQi9zYCxcbiAgICAgICAgc3BlZWR1cDogYCR7KGNwdU1ldHJpY3MubGF0ZW5jeSAvIGdwdU1ldHJpY3MubGF0ZW5jeSkudG9GaXhlZCgxKX14YFxuICAgICAgfVxuICAgIH07XG4gIH1cbn0gIl0sIm5hbWVzIjpbIk5WSURJQV9CRU5DSE1BUktTIiwiQ1BVX0JFTkNITUFSS1MiLCJQZXJmb3JtYW5jZUNhbGN1bGF0b3IiLCJnZXRTY2FsaW5nRmFjdG9ycyIsIm1vZGVsSWQiLCJ0b3RhbFBhcmFtcyIsInRvdGFsRmxvcHMiLCJiYXNlbGluZU1vZGVsIiwiYmFzZWxpbmVQYXJhbXMiLCJiYXNlbGluZUZsb3BzIiwicGFyYW1TY2FsZSIsIk1hdGgiLCJzcXJ0IiwiZmxvcHNTY2FsZSIsImNicnQiLCJtb2RlbFR5cGUiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiY2FsY3VsYXRlTWV0cmljcyIsImFuYWx5c2lzUmVzdWx0IiwiZ3JhcGgiLCJtZXRhZGF0YSIsImdwdUJhc2VsaW5lIiwicmVzbmV0NTAiLCJhMTAwIiwiYmF0Y2hTaXplMSIsImNwdUJhc2VsaW5lIiwiZ3B1TWV0cmljcyIsImZwcyIsImxhdGVuY3kiLCJtZW1vcnkiLCJ1dGlsaXphdGlvbiIsIm1pbiIsImNwdU1ldHJpY3MiLCJudk9wdGltaXphdGlvbnMiLCJ0ZW5zb3JDb3JlVXNhZ2UiLCJ0b0ZpeGVkIiwibWVtb3J5QmFuZHdpZHRoIiwic3BlZWR1cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/model/performance.ts\n"));

/***/ })

});