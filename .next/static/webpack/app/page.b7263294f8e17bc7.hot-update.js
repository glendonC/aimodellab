"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/model/performance.ts":
/*!**********************************!*\
  !*** ./lib/model/performance.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PerformanceAnalyzer: function() { return /* binding */ PerformanceAnalyzer; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./lib/model/constants.ts\");\n\nclass PerformanceAnalyzer {\n    calculateMetrics(analysisResult, useGpu) {\n        const modelType = this.getModelType(analysisResult.graph.metadata.modelId);\n        const benchmarks = _constants__WEBPACK_IMPORTED_MODULE_0__.MODEL_BENCHMARKS[modelType];\n        if (!benchmarks) {\n            return this.getDefaultMetrics();\n        }\n        // Just return the raw benchmark numbers directly\n        const cpuMetrics = {\n            fps: benchmarks.cpu.inferenceSpeed,\n            latency: benchmarks.cpu.latency,\n            memory: benchmarks.cpu.memoryUsage,\n            utilization: benchmarks.cpu.utilization\n        };\n        if (!useGpu) {\n            return {\n                cpuMetrics,\n                gpuMetrics: null,\n                nvOptimizations: null\n            };\n        }\n        // Return GPU metrics directly from benchmarks\n        const gpuMetrics = {\n            fps: benchmarks.gpu.inferenceSpeed,\n            latency: benchmarks.gpu.latency,\n            memory: benchmarks.gpu.memoryUsage,\n            utilization: benchmarks.gpu.utilization\n        };\n        return {\n            cpuMetrics,\n            gpuMetrics,\n            nvOptimizations: {\n                tensorCoreUsage: benchmarks.gpu.tensorCoreUsage,\n                memoryBandwidth: benchmarks.gpu.memoryBandwidth,\n                speedup: benchmarks.gpu.speedup\n            }\n        };\n    }\n    getModelType(modelId) {\n        modelId = modelId.toLowerCase();\n        if (modelId.includes(\"resnet\")) return \"resnet-50\";\n        if (modelId.includes(\"yolo\")) return \"yolov8\";\n        if (modelId.includes(\"stable\")) return \"stable-diffusion\";\n        if (modelId.includes(\"llama\")) return \"llama2\";\n        if (modelId.includes(\"gpt\")) return \"gpt2\";\n        if (modelId.includes(\"bart\")) return \"bart\";\n        if (modelId.includes(\"whisper\")) return \"whisper\";\n        if (modelId.includes(\"vit\")) return \"vit\";\n        if (modelId.includes(\"biobert\")) return \"biobert\";\n        if (modelId.includes(\"dino\")) return \"dinov2\";\n        // Default to resnet if no match\n        return \"resnet-50\";\n    }\n    getDefaultMetrics() {\n        // Use ResNet-50 as default\n        return this.calculateMetrics({\n            graph: {\n                metadata: {\n                    modelId: \"resnet-50\"\n                },\n                layers: []\n            }\n        }, false);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9tb2RlbC9wZXJmb3JtYW5jZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQXVCeEMsTUFBTUM7SUFDWEMsaUJBQWlCQyxjQUE4QixFQUFFQyxNQUFlLEVBQUU7UUFDaEUsTUFBTUMsWUFBWSxJQUFJLENBQUNDLFlBQVksQ0FBQ0gsZUFBZUksS0FBSyxDQUFDQyxRQUFRLENBQUNDLE9BQU87UUFDekUsTUFBTUMsYUFBYVYsd0RBQWdCLENBQUNLLFVBQVU7UUFFOUMsSUFBSSxDQUFDSyxZQUFZO1lBQ2YsT0FBTyxJQUFJLENBQUNDLGlCQUFpQjtRQUMvQjtRQUVBLGlEQUFpRDtRQUNqRCxNQUFNQyxhQUFhO1lBQ2pCQyxLQUFLSCxXQUFXSSxHQUFHLENBQUNDLGNBQWM7WUFDbENDLFNBQVNOLFdBQVdJLEdBQUcsQ0FBQ0UsT0FBTztZQUMvQkMsUUFBUVAsV0FBV0ksR0FBRyxDQUFDSSxXQUFXO1lBQ2xDQyxhQUFhVCxXQUFXSSxHQUFHLENBQUNLLFdBQVc7UUFDekM7UUFFQSxJQUFJLENBQUNmLFFBQVE7WUFDWCxPQUFPO2dCQUNMUTtnQkFDQVEsWUFBWTtnQkFDWkMsaUJBQWlCO1lBQ25CO1FBQ0Y7UUFFQSw4Q0FBOEM7UUFDOUMsTUFBTUQsYUFBYTtZQUNqQlAsS0FBS0gsV0FBV1ksR0FBRyxDQUFDUCxjQUFjO1lBQ2xDQyxTQUFTTixXQUFXWSxHQUFHLENBQUNOLE9BQU87WUFDL0JDLFFBQVFQLFdBQVdZLEdBQUcsQ0FBQ0osV0FBVztZQUNsQ0MsYUFBYVQsV0FBV1ksR0FBRyxDQUFDSCxXQUFXO1FBQ3pDO1FBRUEsT0FBTztZQUNMUDtZQUNBUTtZQUNBQyxpQkFBaUI7Z0JBQ2ZFLGlCQUFpQmIsV0FBV1ksR0FBRyxDQUFDQyxlQUFlO2dCQUMvQ0MsaUJBQWlCZCxXQUFXWSxHQUFHLENBQUNFLGVBQWU7Z0JBQy9DQyxTQUFTZixXQUFXWSxHQUFHLENBQUNHLE9BQU87WUFDakM7UUFDRjtJQUNGO0lBRVFuQixhQUFhRyxPQUFlLEVBQVU7UUFDNUNBLFVBQVVBLFFBQVFpQixXQUFXO1FBRTdCLElBQUlqQixRQUFRa0IsUUFBUSxDQUFDLFdBQVcsT0FBTztRQUN2QyxJQUFJbEIsUUFBUWtCLFFBQVEsQ0FBQyxTQUFTLE9BQU87UUFDckMsSUFBSWxCLFFBQVFrQixRQUFRLENBQUMsV0FBVyxPQUFPO1FBQ3ZDLElBQUlsQixRQUFRa0IsUUFBUSxDQUFDLFVBQVUsT0FBTztRQUN0QyxJQUFJbEIsUUFBUWtCLFFBQVEsQ0FBQyxRQUFRLE9BQU87UUFDcEMsSUFBSWxCLFFBQVFrQixRQUFRLENBQUMsU0FBUyxPQUFPO1FBQ3JDLElBQUlsQixRQUFRa0IsUUFBUSxDQUFDLFlBQVksT0FBTztRQUN4QyxJQUFJbEIsUUFBUWtCLFFBQVEsQ0FBQyxRQUFRLE9BQU87UUFDcEMsSUFBSWxCLFFBQVFrQixRQUFRLENBQUMsWUFBWSxPQUFPO1FBQ3hDLElBQUlsQixRQUFRa0IsUUFBUSxDQUFDLFNBQVMsT0FBTztRQUVyQyxnQ0FBZ0M7UUFDaEMsT0FBTztJQUNUO0lBRVFoQixvQkFBd0M7UUFDOUMsMkJBQTJCO1FBQzNCLE9BQU8sSUFBSSxDQUFDVCxnQkFBZ0IsQ0FBQztZQUMzQkssT0FBTztnQkFDTEMsVUFBVTtvQkFBRUMsU0FBUztnQkFBWTtnQkFDakNtQixRQUFRLEVBQUU7WUFDWjtRQUNGLEdBQUc7SUFDTDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9tb2RlbC9wZXJmb3JtYW5jZS50cz9kYjU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1PREVMX0JFTkNITUFSS1MgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgdHlwZSB7IEFuYWx5c2lzUmVzdWx0IH0gZnJvbSAnLi90eXBlcyc7XG5cbmludGVyZmFjZSBQZXJmb3JtYW5jZU1ldHJpY3Mge1xuICBjcHVNZXRyaWNzOiB7XG4gICAgZnBzOiBudW1iZXI7XG4gICAgbGF0ZW5jeTogbnVtYmVyO1xuICAgIG1lbW9yeTogbnVtYmVyO1xuICAgIHV0aWxpemF0aW9uOiBudW1iZXI7XG4gIH07XG4gIGdwdU1ldHJpY3M6IHtcbiAgICBmcHM6IG51bWJlcjtcbiAgICBsYXRlbmN5OiBudW1iZXI7XG4gICAgbWVtb3J5OiBudW1iZXI7XG4gICAgdXRpbGl6YXRpb246IG51bWJlcjtcbiAgfTtcbiAgbnZPcHRpbWl6YXRpb25zOiB7XG4gICAgdGVuc29yQ29yZVVzYWdlOiBzdHJpbmc7XG4gICAgbWVtb3J5QmFuZHdpZHRoOiBzdHJpbmc7XG4gICAgc3BlZWR1cDogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgUGVyZm9ybWFuY2VBbmFseXplciB7XG4gIGNhbGN1bGF0ZU1ldHJpY3MoYW5hbHlzaXNSZXN1bHQ6IEFuYWx5c2lzUmVzdWx0LCB1c2VHcHU6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBtb2RlbFR5cGUgPSB0aGlzLmdldE1vZGVsVHlwZShhbmFseXNpc1Jlc3VsdC5ncmFwaC5tZXRhZGF0YS5tb2RlbElkKTtcbiAgICBjb25zdCBiZW5jaG1hcmtzID0gTU9ERUxfQkVOQ0hNQVJLU1ttb2RlbFR5cGVdO1xuXG4gICAgaWYgKCFiZW5jaG1hcmtzKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXREZWZhdWx0TWV0cmljcygpO1xuICAgIH1cblxuICAgIC8vIEp1c3QgcmV0dXJuIHRoZSByYXcgYmVuY2htYXJrIG51bWJlcnMgZGlyZWN0bHlcbiAgICBjb25zdCBjcHVNZXRyaWNzID0ge1xuICAgICAgZnBzOiBiZW5jaG1hcmtzLmNwdS5pbmZlcmVuY2VTcGVlZCxcbiAgICAgIGxhdGVuY3k6IGJlbmNobWFya3MuY3B1LmxhdGVuY3ksXG4gICAgICBtZW1vcnk6IGJlbmNobWFya3MuY3B1Lm1lbW9yeVVzYWdlLFxuICAgICAgdXRpbGl6YXRpb246IGJlbmNobWFya3MuY3B1LnV0aWxpemF0aW9uXG4gICAgfTtcblxuICAgIGlmICghdXNlR3B1KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjcHVNZXRyaWNzLFxuICAgICAgICBncHVNZXRyaWNzOiBudWxsLFxuICAgICAgICBudk9wdGltaXphdGlvbnM6IG51bGxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIEdQVSBtZXRyaWNzIGRpcmVjdGx5IGZyb20gYmVuY2htYXJrc1xuICAgIGNvbnN0IGdwdU1ldHJpY3MgPSB7XG4gICAgICBmcHM6IGJlbmNobWFya3MuZ3B1LmluZmVyZW5jZVNwZWVkLFxuICAgICAgbGF0ZW5jeTogYmVuY2htYXJrcy5ncHUubGF0ZW5jeSxcbiAgICAgIG1lbW9yeTogYmVuY2htYXJrcy5ncHUubWVtb3J5VXNhZ2UsXG4gICAgICB1dGlsaXphdGlvbjogYmVuY2htYXJrcy5ncHUudXRpbGl6YXRpb25cbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNwdU1ldHJpY3MsXG4gICAgICBncHVNZXRyaWNzLFxuICAgICAgbnZPcHRpbWl6YXRpb25zOiB7XG4gICAgICAgIHRlbnNvckNvcmVVc2FnZTogYmVuY2htYXJrcy5ncHUudGVuc29yQ29yZVVzYWdlLFxuICAgICAgICBtZW1vcnlCYW5kd2lkdGg6IGJlbmNobWFya3MuZ3B1Lm1lbW9yeUJhbmR3aWR0aCxcbiAgICAgICAgc3BlZWR1cDogYmVuY2htYXJrcy5ncHUuc3BlZWR1cFxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBwcml2YXRlIGdldE1vZGVsVHlwZShtb2RlbElkOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIG1vZGVsSWQgPSBtb2RlbElkLnRvTG93ZXJDYXNlKCk7XG4gICAgXG4gICAgaWYgKG1vZGVsSWQuaW5jbHVkZXMoJ3Jlc25ldCcpKSByZXR1cm4gJ3Jlc25ldC01MCc7XG4gICAgaWYgKG1vZGVsSWQuaW5jbHVkZXMoJ3lvbG8nKSkgcmV0dXJuICd5b2xvdjgnO1xuICAgIGlmIChtb2RlbElkLmluY2x1ZGVzKCdzdGFibGUnKSkgcmV0dXJuICdzdGFibGUtZGlmZnVzaW9uJztcbiAgICBpZiAobW9kZWxJZC5pbmNsdWRlcygnbGxhbWEnKSkgcmV0dXJuICdsbGFtYTInO1xuICAgIGlmIChtb2RlbElkLmluY2x1ZGVzKCdncHQnKSkgcmV0dXJuICdncHQyJztcbiAgICBpZiAobW9kZWxJZC5pbmNsdWRlcygnYmFydCcpKSByZXR1cm4gJ2JhcnQnO1xuICAgIGlmIChtb2RlbElkLmluY2x1ZGVzKCd3aGlzcGVyJykpIHJldHVybiAnd2hpc3Blcic7XG4gICAgaWYgKG1vZGVsSWQuaW5jbHVkZXMoJ3ZpdCcpKSByZXR1cm4gJ3ZpdCc7XG4gICAgaWYgKG1vZGVsSWQuaW5jbHVkZXMoJ2Jpb2JlcnQnKSkgcmV0dXJuICdiaW9iZXJ0JztcbiAgICBpZiAobW9kZWxJZC5pbmNsdWRlcygnZGlubycpKSByZXR1cm4gJ2Rpbm92Mic7XG4gICAgXG4gICAgLy8gRGVmYXVsdCB0byByZXNuZXQgaWYgbm8gbWF0Y2hcbiAgICByZXR1cm4gJ3Jlc25ldC01MCc7XG4gIH1cblxuICBwcml2YXRlIGdldERlZmF1bHRNZXRyaWNzKCk6IFBlcmZvcm1hbmNlTWV0cmljcyB7XG4gICAgLy8gVXNlIFJlc05ldC01MCBhcyBkZWZhdWx0XG4gICAgcmV0dXJuIHRoaXMuY2FsY3VsYXRlTWV0cmljcyh7XG4gICAgICBncmFwaDoge1xuICAgICAgICBtZXRhZGF0YTogeyBtb2RlbElkOiAncmVzbmV0LTUwJyB9LFxuICAgICAgICBsYXllcnM6IFtdXG4gICAgICB9XG4gICAgfSwgZmFsc2UpO1xuICB9XG59Il0sIm5hbWVzIjpbIk1PREVMX0JFTkNITUFSS1MiLCJQZXJmb3JtYW5jZUFuYWx5emVyIiwiY2FsY3VsYXRlTWV0cmljcyIsImFuYWx5c2lzUmVzdWx0IiwidXNlR3B1IiwibW9kZWxUeXBlIiwiZ2V0TW9kZWxUeXBlIiwiZ3JhcGgiLCJtZXRhZGF0YSIsIm1vZGVsSWQiLCJiZW5jaG1hcmtzIiwiZ2V0RGVmYXVsdE1ldHJpY3MiLCJjcHVNZXRyaWNzIiwiZnBzIiwiY3B1IiwiaW5mZXJlbmNlU3BlZWQiLCJsYXRlbmN5IiwibWVtb3J5IiwibWVtb3J5VXNhZ2UiLCJ1dGlsaXphdGlvbiIsImdwdU1ldHJpY3MiLCJudk9wdGltaXphdGlvbnMiLCJncHUiLCJ0ZW5zb3JDb3JlVXNhZ2UiLCJtZW1vcnlCYW5kd2lkdGgiLCJzcGVlZHVwIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImxheWVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/model/performance.ts\n"));

/***/ })

});